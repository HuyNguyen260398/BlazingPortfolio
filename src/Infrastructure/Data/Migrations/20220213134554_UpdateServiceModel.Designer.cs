// <auto-generated />
using System;
using Infrastructure.SqliteDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220213134554_UpdateServiceModel")]
    partial class UpdateServiceModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("CoreBusiness.Models.Archievement", b =>
                {
                    b.Property<int>("ArchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArchievementId");

                    b.ToTable("Archievements");

                    b.HasData(
                        new
                        {
                            ArchievementId = 1,
                            Count = 111,
                            Name = "Happy Clients"
                        },
                        new
                        {
                            ArchievementId = 2,
                            Count = 333,
                            Name = "Projects Finished"
                        },
                        new
                        {
                            ArchievementId = 4,
                            Count = 555,
                            Name = "Certificates Archieved"
                        },
                        new
                        {
                            ArchievementId = 3,
                            Count = 777,
                            Name = "Awards Won"
                        });
                });

            modelBuilder.Entity("CoreBusiness.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageGuid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NewImageBase64Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NewImageExtension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OldImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RelativeImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ImageId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            ImageGuid = "cce9e9a2-93e9-46d4-a33a-ff7c798f5c12",
                            NewImageBase64Content = "",
                            NewImageExtension = ".png",
                            OldImagePath = "",
                            RelativeImagePath = ""
                        },
                        new
                        {
                            ImageId = 2,
                            ImageGuid = "e0c6f826-f314-4016-a849-ff5f275c7506",
                            NewImageBase64Content = "",
                            NewImageExtension = ".png",
                            OldImagePath = "",
                            RelativeImagePath = ""
                        },
                        new
                        {
                            ImageId = 3,
                            ImageGuid = "392ad7b4-c809-4609-a40c-ce4e77efc8fb",
                            NewImageBase64Content = "",
                            NewImageExtension = ".png",
                            OldImagePath = "",
                            RelativeImagePath = ""
                        });
                });

            modelBuilder.Entity("CoreBusiness.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Excerpt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbnailPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PostId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            Content = "Content 1",
                            Excerpt = "Excerpt 1",
                            IsPublished = true,
                            PublishDate = new DateTime(2022, 2, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            ThumbnailPath = "",
                            Title = "Post 1"
                        },
                        new
                        {
                            PostId = 2,
                            Content = "Content 2",
                            Excerpt = "Excerpt 2",
                            IsPublished = true,
                            PublishDate = new DateTime(2022, 2, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            ThumbnailPath = "",
                            Title = "Post 2"
                        },
                        new
                        {
                            PostId = 3,
                            Content = "Content 3",
                            Excerpt = "Excerpt 3",
                            IsPublished = true,
                            PublishDate = new DateTime(2022, 2, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            ThumbnailPath = "",
                            Title = "Post 3"
                        });
                });

            modelBuilder.Entity("CoreBusiness.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayIcon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            Description = "Building web apps with DotNet",
                            DisplayIcon = "Icons.Filled.DesktopWindows",
                            Name = "Web Developement"
                        },
                        new
                        {
                            ServiceId = 2,
                            Description = "Upscaling apps using DevOps stacks",
                            DisplayIcon = "Icons.Filled.CloudSync",
                            Name = "DevOps"
                        },
                        new
                        {
                            ServiceId = 3,
                            Description = "Visualizing data by Power Bi",
                            DisplayIcon = "Icons.Filled.QueryStats",
                            Name = "Data Analysist"
                        });
                });

            modelBuilder.Entity("CoreBusiness.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ScorePercentage")
                        .HasColumnType("TEXT");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("INTEGER");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            Name = "C#",
                            ScorePercentage = 0.9m,
                            YearsOfExperience = 3
                        },
                        new
                        {
                            SkillId = 2,
                            Name = "SQL",
                            ScorePercentage = 0.5m,
                            YearsOfExperience = 1
                        },
                        new
                        {
                            SkillId = 3,
                            Name = "DotNet",
                            ScorePercentage = 0.7m,
                            YearsOfExperience = 2
                        },
                        new
                        {
                            SkillId = 4,
                            Name = "Blazor",
                            ScorePercentage = 0.7m,
                            YearsOfExperience = 2
                        });
                });

            modelBuilder.Entity("CoreBusiness.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Interests")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Study")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "HCM City, Viet Nam",
                            AvatarImagePath = "uploads/avatar.jpg",
                            BackgroundImagePath = "uploads/ocean_background.jpg",
                            Degree = "Bachelor of Computer Science",
                            DoB = new DateTime(1998, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huynguyen260398@gmail.com",
                            FirstName = "Huy",
                            Interests = "Building websites",
                            Intro = "I am a Web Developer, and I'm very passionate and dedicated to my work. With 2 years experience as a senior Web developer, I have acquired the skills and knowledge necessary to make your project a success.",
                            LastName = "Nguyen",
                            Password = "Pas$w0rd",
                            Phone = "(+84)903336493",
                            Study = "University of Greenwich"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
