@page "/admin/skills"

@inject NavigationManager NavManager
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject ISkillRepo SkillRepo

<Breadcrumbs />

<MudGrid>
    <MudItem xs="12" Class="mt-5">
        <MudTable Elevation="5" Items="@Skills" Hover="true">
            <ToolBarContent>
                <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-5"></MudTextField>
                <MudSpacer />
            </ToolBarContent>
            <HeaderContent>
                <MudTh Class="text-center">Skill</MudTh>
                <MudTh Class="text-center">Years of Experience</MudTh>
                <MudTh Class="text-center">Percentage</MudTh>
                <MudTh></MudTh>
                <MudTh>
                    <MudItem Class="d-flex justify-end">
                        <MudFab Color="Color.Secondary" StartIcon="@Icons.Filled.Add" Size="Size.Medium" Class="mx-3" Link="/admin/skills/edit" />
                    </MudItem>
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd Class="text-center" DataLabel="Skill">@context.Name</MudTd>
                <MudTd Class="text-center" DataLabel="Years of Experience">@context.YearsOfExperience</MudTd>
                <MudTd Class="text-center" DataLabel="Percentage">@(context.ScorePercentage*100) %</MudTd>
                <MudTd>
                    <MudItem Class="d-flex">
                        <MudProgressLinear Color="Color.Primary" Rounded="true" Size="Size.Medium" Value="(double)context.ScorePercentage*100" Style="width:300px" Class="flex-grow-1" />
                    </MudItem>
                </MudTd>
                <MudTd>
                    <MudItem Class="d-flex justify-end">
                        <MudFab Color="Color.Warning" StartIcon="@Icons.Filled.Edit" Size="Size.Medium" Class="mx-3" Link="@($"admin/skills/edit/{context.SkillId}")" />
                        <MudFab Color="Color.Error" StartIcon="@Icons.Filled.Delete" Size="Size.Medium" Class="mx-3" OnClick="(() => DeleteSkill(context.SkillId))" />
                    </MudItem>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudItem>
</MudGrid>

@code
{
    private IEnumerable<SkillDto> Skills = new List<SkillDto>();

    private string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        Skills = await SkillRepo.GetAllAsync(ApiEndPoints.SkillEndpoint);
    }

    private async void DeleteSkill(int id)
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Are you sure to delete this record?");
        parameters.Add("ButtonText", "Delete");
        parameters.Add("Color", Color.Error);

        var options = new DialogOptions();

        var deleteDialog = DialogService.Show<ConfirmDeleteDialog>("Delete", parameters, options);
        var confirmResult = await deleteDialog.Result;

        if (!confirmResult.Cancelled)
        {
            var deleteResult = await SkillRepo.DeleteAsync(ApiEndPoints.SkillEndpoint, id);

            if (deleteResult)
            {
                Snackbar.Add("Delete Success", Severity.Success);
                StateHasChanged();
                NavManager.NavigateTo("/admin/skills", true);
            }
            else
                Snackbar.Add("Delete Error", Severity.Error);
        }
    }
}