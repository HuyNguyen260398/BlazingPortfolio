pipeline {
    agent {
        node {
            label "test"
        }
    }
    options {
        timestamps ()
    }
    environment {
        dotnet = "C:\\Program Files\\dotnet\\dotnet.exe"
        api_dockerhub_repo = "huynguyen260398/blazing-portfolio-api"
        wasm_dockerhub_repo = "huynguyen260398/blazing-portfolio-wasm"
        dockerhub_credentials = "DockerHub_Credentials"
        api_image = ""
        wasm_image = ""
    }
    stages {
        stage("Restore Packages") {
            steps {
                bat "dotnet restore"
            }
        }
        stage("Test Sources") {
            steps {
                echo "Test Sources"
            }
        }
        stage("Build Sources") {
            steps {
                bat "dotnet build"
            }
        }
        stage("Archive Sources") {
            steps {
                archiveArtifacts artifacts: '**/API/bin/, **/WASM/bin/'
            }
        }
        stage("Build Images") {
            steps {
                script {
                    api_image = docker.build("${api_dockerhub_repo}", "-f src/API/Dockerfile .")
                    wasm_image = docker.build("${wasm_dockerhub_repo}", "-f src/WASM/Dockerfile .")
                }
            }
        }
        stage("Test Images") {
            steps {
                // script {
                //     api_image.inside {
                //         sh 'echo "Tests passed from API"'
                //     }
                //     wasm_image.inside {
                //         sh 'echo "Tests passed from WASM"'
                //     }
                // }
                echo "Test Images"
            }
        }
        stage("Deploy Images") {
            steps {
                script {
                    docker.withRegistry("", dockerhub_credentials) {
                        api_image.push("1.1.${BUILD_NUMBER}")
                        api_image.push("latest")
                        wasm_image.push("1.1.${BUILD_NUMBER}")
                        wasm_image.push("latest")
                    }
                }
            }
        }
        stage("Clean Images") {
            steps {
                bat "docker rmi ${api_dockerhub_repo}:1.1.${BUILD_NUMBER}"
                bat "docker rmi ${api_dockerhub_repo}:latest"
                bat "docker rmi ${wasm_dockerhub_repo}:1.1.${BUILD_NUMBER}"
                bat "docker rmi ${wasm_dockerhub_repo}:latest"
            }
        }
        stage("Clean Workspace") {
            steps {
                cleanWs()
            }
        }
    }
    post {
        // always {
        //     emailext attachLog: true, body: 'Build', recipientProviders: [buildUser()], subject: "'Build Finished'", to: 'huynguyen260398@live.com'
        // }
        success {
            emailext (
                attachLog: true, 
                subject: "SUCCESSFUL: Job '${JOB_NAME} [${BUILD_NUMBER}]'", 
                to: 'huynguyen260398@live.com', 
                recipientProviders: [buildUser()], 
                body: """
                    <p>SUCCESSFUL: Job '${JOB_NAME} [${BUILD_NUMBER}]':</p>
                    <p>Check console output at &QUOT;<a href='${BUILD_URL}'>${JOB_NAME} [${BUILD_NUMBER}]</a>&QUOT;</p>
                """
            )
        }
        failure {
            emailext (
                attachLog: true, 
                subject: "FAILED: Job '${JOB_NAME} [${BUILD_NUMBER}]'", 
                to: 'huynguyen260398@live.com', 
                recipientProviders: [buildUser()], 
                body: """
                    <p>FAILED: Job '${JOB_NAME} [${BUILD_NUMBER}]':</p>
                    <p>Check console output at &QUOT;<a href='${BUILD_URL}'>${JOB_NAME} [${BUILD_NUMBER}]</a>&QUOT;</p>
                """
            )
        }
        // unstable {
        //     emailext attachLog: true, body: 'Test', recipientProviders: [buildUser()], subject: 'Build Unstable', to: 'huynguyen260398@live.com'
        // }
        // changed {
        //     emailext attachLog: true, body: 'Test', recipientProviders: [buildUser()], subject: 'Build Chagned', to: 'huynguyen260398@live.com'
        // }
    }
}